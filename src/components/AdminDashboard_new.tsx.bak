import React from 'react';
import {
  Box,
  Typography,
  Card,
  CardContent,
  Paper,
  Stack,
  Chip
} from '@mui/material';
import { motion } from 'framer-motion';
import { BookOpen, HelpCircle, Target, TrendingUp } from 'lucide-react';
import type { Subject, Question, PredictedTopic } from '../App';

interface AdminDashboardProps {
  subjects: Subject[];
  questions: Question[];
  predictedTopics: PredictedTopic[];
}

const AdminDashboard: React.FC<AdminDashboardProps> = ({ 
  subjects, 
  questions, 
  predictedTopics 
}) => {
  const totalQuestions = questions.length;
  const activePredictions = predictedTopics.filter(p => p.isActive).length;
  const avgProbability = predictedTopics.length > 0 
    ? Math.round(predictedTopics.reduce((acc, p) => acc + p.probability, 0) / predictedTopics.length)
    : 0;

  const statsCards = [
    { icon: BookOpen, title: 'Total Subjects', value: subjects.length, color: 'primary' },
    { icon: HelpCircle, title: 'Total Questions', value: totalQuestions, color: 'success' },
    { icon: Target, title: 'Active Predictions', value: activePredictions, color: 'warning' },
    { icon: TrendingUp, title: 'Avg Probability', value: `${avgProbability}%`, color: 'info' }
  ];

  return (
    <Box>
      <Paper elevation={1} sx={{ p: 3, mb: 4, backgroundColor: 'primary.main', color: 'white' }}>
        <Typography variant="h4" gutterBottom fontWeight="bold">
          ðŸŽ¯ BECE 2026 Admin Dashboard
        </Typography>
        <Typography variant="h6" sx={{ opacity: 0.9 }}>
          Manage subjects, questions, and predictions for BECE 2026
        </Typography>
      </Paper>

      {/* Statistics Cards */}
      <Box sx={{ 
        display: 'grid', 
        gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', 
        gap: 3, 
        mb: 4 
      }}>
        {statsCards.map((stat, index) => (
          <motion.div
            key={stat.title}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5, delay: index * 0.1 }}
          >
            <Card sx={{ height: '100%' }}>
              <CardContent sx={{ textAlign: 'center', p: 3 }}>
                <stat.icon size={40} />
                <Typography variant="h3" color={`${stat.color}.main`} fontWeight="bold" sx={{ mt: 1 }}>
                  {stat.value}
                </Typography>
                <Typography variant="body1" color="text.secondary">
                  {stat.title}
                </Typography>
              </CardContent>
            </Card>
          </motion.div>
        ))}
      </Box>

      {/* Quick Start Guide */}
      <Paper sx={{ p: 3, mb: 4 }}>
        <Typography variant="h6" gutterBottom>
          ðŸ“š Quick Start Guide
        </Typography>
        <Stack spacing={2}>
          <Box sx={{ p: 2, backgroundColor: 'grey.50', borderRadius: 1 }}>
            <Typography variant="body1" fontWeight="bold">1. Create Subjects</Typography>
            <Typography variant="body2" color="text.secondary">
              Go to the Subjects tab to add subjects like Mathematics, English, Science, etc.
            </Typography>
          </Box>
          <Box sx={{ p: 2, backgroundColor: 'grey.50', borderRadius: 1 }}>
            <Typography variant="body1" fontWeight="bold">2. Add Questions</Typography>
            <Typography variant="body2" color="text.secondary">
              Use the Questions tab to create questions for each subject and topic.
            </Typography>
          </Box>
          <Box sx={{ p: 2, backgroundColor: 'grey.50', borderRadius: 1 }}>
            <Typography variant="body1" fontWeight="bold">3. Set Predictions</Typography>
            <Typography variant="body2" color="text.secondary">
              Configure topic predictions with probability percentages in the Predictions tab.
            </Typography>
          </Box>
        </Stack>
      </Paper>

      {/* Subject Overview */}
      {subjects.length > 0 && (
        <Paper sx={{ p: 3 }}>
          <Typography variant="h6" gutterBottom>
            ðŸ“Š Subject Overview
          </Typography>
          <Box sx={{ 
            display: 'grid', 
            gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', 
            gap: 2 
          }}>
            {subjects.map((subject) => {
              const subjectQuestions = questions.filter(q => q.subjectId === subject.id);
              const subjectPredictions = predictedTopics.filter(p => p.subjectId === subject.id && p.isActive);
              
              return (
                <Card key={subject.id} sx={{ p: 2 }}>
                  <Typography variant="h6" color="primary" gutterBottom>
                    {subject.name}
                  </Typography>
                  <Typography variant="body2" color="text.secondary" paragraph>
                    {subject.description}
                  </Typography>
                  <Stack direction="row" spacing={1} flexWrap="wrap">
                    <Chip label={`${subject.topics.length} Topics`} size="small" color="primary" />
                    <Chip label={`${subjectQuestions.length} Questions`} size="small" color="success" />
                    <Chip label={`${subjectPredictions.length} Predictions`} size="small" color="warning" />
                  </Stack>
                </Card>
              );
            })}
          </Box>
        </Paper>
      )}
    </Box>
  );
};

export default AdminDashboard;
