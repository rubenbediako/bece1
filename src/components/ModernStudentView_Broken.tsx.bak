import React, { useState } from 'react';
import {
  Box,
  Container,
  Typography,
  Card,
  CardContent,
  Grid,
  Button,
  Chip,
  Avatar,
  LinearProgress,
  Stack,
  Paper,
} from '@mui/material';
import {
  PlayArrowOutlined,
  TrendingUpOutlined,
  AccessTimeOutlined,
  CheckCircleOutlined,
  PodcastsOutlined,
  SmartToyOutlined,
  SchoolOutlined,
} from '@mui/icons-material';
import { motion } from 'framer-motion';
import type { Subject, Topic, Question, PredictedTopic } from '../types';

interface ModernStudentViewProps {
  subjects: Subject[];
  topics: Topic[];
  questions: Question[];
  predictedTopics: PredictedTopic[];
}

const ModernStudentView: React.FC<ModernStudentViewProps> = ({
  subjects,
  topics,
  questions,
  predictedTopics,
}) => {
  const [selectedSubject, setSelectedSubject] = useState<string | null>(null);

  const getSubjectColor = (index: number) => {
    const colors = ['#2563eb', '#7c3aed', '#059669', '#dc2626', '#ea580c', '#0891b2'];
    return colors[index % colors.length];
  };

  const getTopicsBySubject = (subjectId: string) => {
    return topics.filter(topic => topic.subjectId === subjectId);
  };

  const getQuestionsByTopic = (topicId: string) => {
    return questions.filter(question => question.topicId === topicId);
  };

  const getSubjectProgress = (subjectId: string) => {
    const subjectTopics = getTopicsBySubject(subjectId);
    const totalQuestions = subjectTopics.reduce((acc, topic) => 
      acc + getQuestionsByTopic(topic.id).length, 0
    );
    const completedQuestions = Math.floor(totalQuestions * 0.6); // Mock progress
    return totalQuestions > 0 ? (completedQuestions / totalQuestions) * 100 : 0;
  };

  const isPredicted = (topicId: string) => {
    return predictedTopics.some(pt => pt.topicId === topicId);
  };

  return (
    <Box sx={{ 
      background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',
      minHeight: '100vh',
      py: 4,
    }}>
      <Container maxWidth="xl">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
        >
          <Box sx={{ mb: 6 }}>
            <Typography 
              variant="h3" 
              sx={{ 
                fontWeight: 800,
                background: 'linear-gradient(135deg, #2563eb 0%, #7c3aed 100%)',
                WebkitBackgroundClip: 'text',
                WebkitTextFillColor: 'transparent',
                mb: 2,
              }}
            >
              Welcome back, Student! ðŸ‘‹
            </Typography>
            <Typography variant="h6" sx={{ color: 'text.secondary', mb: 4 }}>
              Continue your BECE 2026 preparation journey
            </Typography>

            {/* Stats Cards */}
            <Grid container spacing={3} sx={{ mb: 4 }}>
              <Grid item xs={12} sm={6} md={3}>
                <Card sx={{ 
                  background: 'linear-gradient(135deg, #2563eb 0%, #3b82f6 100%)',
                  color: 'white',
                  '&:hover': { transform: 'translateY(-4px)' },
                  transition: 'all 0.3s ease-in-out',
                }}>
                  <CardContent sx={{ textAlign: 'center' }}>
                    <SchoolOutlined sx={{ fontSize: 40, mb: 1 }} />
                    <Typography variant="h4" sx={{ fontWeight: 700 }}>
                      {subjects.length}
                    </Typography>
                    <Typography variant="body2" sx={{ opacity: 0.9 }}>
                      Subjects Available
                    </Typography>
                  </CardContent>
                </Card>
              </Grid>
              
              <Grid item xs={12} sm={6} md={3}>
                <Card sx={{ 
                  background: 'linear-gradient(135deg, #7c3aed 0%, #8b5cf6 100%)',
                  color: 'white',
                  '&:hover': { transform: 'translateY(-4px)' },
                  transition: 'all 0.3s ease-in-out',
                }}>
                  <CardContent sx={{ textAlign: 'center' }}>
                    <TrendingUpOutlined sx={{ fontSize: 40, mb: 1 }} />
                    <Typography variant="h4" sx={{ fontWeight: 700 }}>
                      {predictedTopics.length}
                    </Typography>
                    <Typography variant="body2" sx={{ opacity: 0.9 }}>
                      AI Predictions
                    </Typography>
                  </CardContent>
                </Card>
              </Grid>
              
              <Grid item xs={12} sm={6} md={3}>
                <Card sx={{ 
                  background: 'linear-gradient(135deg, #059669 0%, #10b981 100%)',
                  color: 'white',
                  '&:hover': { transform: 'translateY(-4px)' },
                  transition: 'all 0.3s ease-in-out',
                }}>
                  <CardContent sx={{ textAlign: 'center' }}>
                    <CheckCircleOutlined sx={{ fontSize: 40, mb: 1 }} />
                    <Typography variant="h4" sx={{ fontWeight: 700 }}>
                      68%
                    </Typography>
                    <Typography variant="body2" sx={{ opacity: 0.9 }}>
                      Overall Progress
                    </Typography>
                  </CardContent>
                </Card>
              </Grid>
              
              <Grid item xs={12} sm={6} md={3}>
                <Card sx={{ 
                  background: 'linear-gradient(135deg, #dc2626 0%, #ef4444 100%)',
                  color: 'white',
                  '&:hover': { transform: 'translateY(-4px)' },
                  transition: 'all 0.3s ease-in-out',
                }}>
                  <CardContent sx={{ textAlign: 'center' }}>
                    <AccessTimeOutlined sx={{ fontSize: 40, mb: 1 }} />
                    <Typography variant="h4" sx={{ fontWeight: 700 }}>
                      42
                    </Typography>
                    <Typography variant="body2" sx={{ opacity: 0.9 }}>
                      Study Days Left
                    </Typography>
                  </CardContent>
                </Card>
              </Grid>
            </Grid>
          </Box>
        </motion.div>

        {/* Subjects Grid */}
        <Grid container spacing={4}>
          {/* Subjects List */}
          <Grid item xs={12} md={4}>
            <motion.div
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6, delay: 0.2 }}
            >
              <Paper sx={{ 
                p: 3, 
                borderRadius: 3,
                background: 'rgba(255, 255, 255, 0.8)',
                backdropFilter: 'blur(20px)',
                border: '1px solid #e2e8f0',
              }}>
                <Typography variant="h5" sx={{ fontWeight: 600, mb: 3 }}>
                  ðŸ“š Your Subjects
                </Typography>
                
                <Stack spacing={2}>
                  {subjects.map((subject, index) => {
                    const progress = getSubjectProgress(subject.id);
                    const isSelected = selectedSubject === subject.id;
                    
                    return (
                      <Card
                        key={subject.id}
                        sx={{
                          cursor: 'pointer',
                          border: isSelected ? `2px solid ${getSubjectColor(index)}` : '1px solid #e2e8f0',
                          background: isSelected ? 'rgba(37, 99, 235, 0.05)' : 'white',
                          '&:hover': {
                            transform: 'translateX(4px)',
                            boxShadow: '0 8px 25px rgba(0, 0, 0, 0.1)',
                          },
                          transition: 'all 0.3s ease-in-out',
                        }}
                        onClick={() => setSelectedSubject(
                          selectedSubject === subject.id ? null : subject.id
                        )}
                      >
                        <CardContent sx={{ p: 2 }}>
                          <Stack direction="row" alignItems="center" spacing={2}>
                            <Avatar sx={{ 
                              background: `linear-gradient(135deg, ${getSubjectColor(index)} 0%, ${getSubjectColor(index)}80 100%)`,
                              width: 48,
                              height: 48,
                            }}>
                              <Typography sx={{ fontSize: '1.2rem' }}>
                                {subject.name.charAt(0)}
                              </Typography>
                            </Avatar>
                            
                            <Box sx={{ flex: 1 }}>
                              <Typography variant="h6" sx={{ fontWeight: 600, mb: 0.5 }}>
                                {subject.name}
                              </Typography>
                              <Typography variant="body2" sx={{ color: 'text.secondary', mb: 1 }}>
                                {getTopicsBySubject(subject.id).length} topics
                              </Typography>
                              
                              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                                <LinearProgress
                                  variant="determinate"
                                  value={progress}
                                  sx={{ 
                                    flex: 1, 
                                    height: 6, 
                                    borderRadius: 3,
                                    '& .MuiLinearProgress-bar': {
                                      background: `linear-gradient(90deg, ${getSubjectColor(index)} 0%, ${getSubjectColor(index)}80 100%)`,
                                    },
                                  }}
                                />
                                <Typography variant="caption" sx={{ fontWeight: 600 }}>
                                  {Math.round(progress)}%
                                </Typography>
                              </Box>
                            </Box>
                          </Stack>
                        </CardContent>
                      </Card>
                    );
                  })}
                </Stack>
              </Paper>
            </motion.div>
          </Grid>

          {/* Topics and Content */}
          <Grid item xs={12} md={8}>
            <motion.div
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6, delay: 0.4 }}
            >
              {selectedSubject ? (
                <Paper sx={{ 
                  p: 3, 
                  borderRadius: 3,
                  background: 'rgba(255, 255, 255, 0.8)',
                  backdropFilter: 'blur(20px)',
                  border: '1px solid #e2e8f0',
                }}>
                  <Box sx={{ mb: 3 }}>
                    <Typography variant="h5" sx={{ fontWeight: 600, mb: 1 }}>
                      {subjects.find(s => s.id === selectedSubject)?.name} Topics
                    </Typography>
                    <Typography variant="body2" sx={{ color: 'text.secondary' }}>
                      Master these topics to excel in your BECE exam
                    </Typography>
                  </Box>

                  <Grid container spacing={3}>
                    {getTopicsBySubject(selectedSubject).map((topic) => {
                      const topicQuestions = getQuestionsByTopic(topic.id);
                      const predicted = isPredicted(topic.id);
                      
                      return (
                        <Grid item xs={12} sm={6} key={topic.id}>
                          <Card sx={{
                            height: '100%',
                            position: 'relative',
                            '&:hover': {
                              transform: 'translateY(-4px)',
                              boxShadow: '0 12px 40px rgba(0, 0, 0, 0.1)',
                            },
                            transition: 'all 0.3s ease-in-out',
                          }}>
                            {predicted && (
                              <Chip
                                label="ðŸ”¥ AI Predicted"
                                size="small"
                                sx={{
                                  position: 'absolute',
                                  top: 12,
                                  right: 12,
                                  background: 'linear-gradient(135deg, #dc2626 0%, #ef4444 100%)',
                                  color: 'white',
                                  fontWeight: 600,
                                  zIndex: 1,
                                }}
                              />
                            )}
                            
                            <CardContent sx={{ p: 3 }}>
                              <Typography variant="h6" sx={{ fontWeight: 600, mb: 2 }}>
                                {topic.name}
                              </Typography>
                              
                              <Stack spacing={2}>
                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                                  <Typography variant="body2" sx={{ color: 'text.secondary' }}>
                                    {topicQuestions.length} questions available
                                  </Typography>
                                </Box>
                                
                                {topicQuestions.slice(0, 1).map((question) => (
                                  <Box key={question.id} sx={{ 
                                    p: 2, 
                                    background: 'rgba(37, 99, 235, 0.05)',
                                    borderRadius: 2,
                                    border: '1px solid rgba(37, 99, 235, 0.1)',
                                  }}>
                                    <Typography variant="body2" sx={{ mb: 2, fontWeight: 500 }}>
                                      {question.question.substring(0, 100)}...
                                    </Typography>
                                    
                                    <Stack direction="row" spacing={1}>
                                      <Button
                                        size="small"
                                        startIcon={<SmartToyOutlined />}
                                        sx={{
                                          background: 'linear-gradient(135deg, #2563eb 0%, #7c3aed 100%)',
                                          color: 'white',
                                          '&:hover': {
                                            background: 'linear-gradient(135deg, #1d4ed8 0%, #6d28d9 100%)',
                                          },
                                        }}
                                      >
                                        AI Solution
                                      </Button>
                                      
                                      <Button
                                        size="small"
                                        startIcon={<PodcastsOutlined />}
                                        variant="outlined"
                                        sx={{
                                          borderColor: '#7c3aed',
                                          color: '#7c3aed',
                                          '&:hover': {
                                            borderColor: '#6d28d9',
                                            background: 'rgba(124, 58, 237, 0.05)',
                                          },
                                        }}
                                      >
                                        Podcast
                                      </Button>
                                    </Stack>
                                  </Box>
                                ))}
                                
                                <Button
                                  variant="outlined"
                                  fullWidth
                                  endIcon={<PlayArrowOutlined />}
                                  sx={{
                                    borderColor: '#2563eb',
                                    color: '#2563eb',
                                    '&:hover': {
                                      borderColor: '#1d4ed8',
                                      background: 'rgba(37, 99, 235, 0.05)',
                                    },
                                  }}
                                >
                                  Start Practice
                                </Button>
                              </Stack>
                            </CardContent>
                          </Card>
                        </Grid>
                      );
                    })}
                  </Grid>
                </Paper>
              ) : (
                <Paper sx={{ 
                  p: 6, 
                  borderRadius: 3,
                  textAlign: 'center',
                  background: 'rgba(255, 255, 255, 0.8)',
                  backdropFilter: 'blur(20px)',
                  border: '1px solid #e2e8f0',
                }}>
                  <Typography variant="h4" sx={{ mb: 2, opacity: 0.6 }}>
                    ðŸ“–
                  </Typography>
                  <Typography variant="h5" sx={{ fontWeight: 600, mb: 1 }}>
                    Select a Subject
                  </Typography>
                  <Typography variant="body1" sx={{ color: 'text.secondary' }}>
                    Choose a subject from the left to start your learning journey
                  </Typography>
                </Paper>
              )}
            </motion.div>
          </Grid>
        </Grid>
      </Container>
    </Box>
  );
};

export default ModernStudentView;
